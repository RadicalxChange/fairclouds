---
// Don't prerender as this page will be unique for each user.
export const prerender = false;

import Layout from "../../layouts/Layout.astro";
import MyCloudsComponent from "../../components/MyCloudsComponent.svelte";
import directus, { directusAdmin } from "../../lib/directus";
import { withToken, readMe, readItems } from '@directus/sdk';
import { parse } from "cookie";

let currentUser = null;
let renewalPrices = [];

// Read cookies from the incoming request
const cookies = parse(Astro.request.headers.get("cookie") || "");
const authToken = cookies.auth_token;

if (authToken) {
  try {
    currentUser = await directus.request(
      withToken(authToken,
        readMe({
          fields: [
            "*",
            "licenses.*",
            "licenses.price_id.id",
            "licenses.price_id.amount",
            "licenses.price_id.cloud_id.id",
            "licenses.price_id.cloud_id.product_id",
            "licenses.price_id.cloud_id.name",
            "licenses.price_id.cloud_id.drawings.*",
            "licenses.price_id.cycle_id.id",
            "licenses.price_id.cycle_id.name",
            "licenses.price_id.cycle_id.start_date",
            "licenses.price_id.cycle_id.renewal_start_date",
            "licenses.price_id.cycle_id.transition_start_date",
            "licenses.price_id.cycle_id.end_date",
            "licenses.price_id.cycle_id.prices_status",
            "licenses.price_id.cycle_id.renewal_active",
            "licenses.price_id.tier",
          ],
        })
      )
    );
  } catch (error) {
    console.error("Failed to fetch user or validate token:", error);
  }

  // Load renewal prices.
  if (currentUser && currentUser.licenses) {
    await Promise.all(
      currentUser.licenses.map(async (license) => {
        if (license.price_id.cycle_id.renewal_active) {
          // Get the renewal price.
          try {
            // If the current license is for an active cycle, the renewal price will be early access. Otherwise it will be active.
            const pricesStatus = license.price_id.cycle_id.prices_status === "active" ? "early_access" : "active";

            const renewalPriceResult = await directusAdmin.request(
              readItems("price", {
                fields: [
                  "*",
                  "cloud_id.id",
                  "cloud_id.name",
                  "cycle_id.id",
                  "cycle_id.name",
                  "cycle_id.start_date",
                  "cycle_id.end_date",
                  "cycle_id.prices_status",
                  "cycle_id.renewal_active",
                  "licenses.id",
                  "licenses.steward",
                  "licenses.steward.id",
                  "licenses.steward.first_name",
                  "licenses.steward.email",
                  "licenses.steward.credits",
                  "licenses.renewed",
                  "licenses.claimed",
                ],
                filter: {
                  id: { _neq: license.price_id.id },
                  cloud_id: { _eq: license.price_id.cloud_id.id },
                  tier: { _eq: license.price_id.tier },
                  cycle_id: {
                    prices_status: { _eq: pricesStatus }
                  }
                },
                limit: 1,
              })
            );
            let renewalPrice = renewalPriceResult.find(price => price.licenses.length === 0);
            if (renewalPrice) {
              renewalPrice.isRenewalPrice = true;
              renewalPrices.push(renewalPrice);
            }
          } catch (error) {
            console.error(`Failed to load renewal price for license ${license.id}:`, error);
          }
        }
      })
    );
  }
}
---

<Layout title="My Clouds">
  <MyCloudsComponent currentUser={currentUser} renewalPrices={renewalPrices} client:load />
</Layout>
